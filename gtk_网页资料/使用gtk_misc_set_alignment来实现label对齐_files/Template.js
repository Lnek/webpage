define("plugins::Template",function(){var g={zero:/\0/g,htmls:/[<>\"]/g,quots:/'/g,dquos:/"/g};String.prototype.trim||(String.prototype.trim=function(){return this.replace(g.white,"")});var b=false;var d,i;var j=["lt","gt","quot"];var e=0;var k={Q:function(m,l){for(var p=m.length-1;p>=0;p--){var o=m[p];if(typeof o==="object"&&(!l||l in o)){return l?o[l]:o}}},mkArr:function(l){return typeof l==="object"&&"length" in l?l:[l]},filter:function(l){if(!l||typeof l!=="string"){return l}return l.replace(g.htmls,function(n){return"&"+j['<>"'.indexOf(n)]+";"})}};function h(n){if(typeof n==="string"){return h({self:n}).self}d=[];i=[];d.push("var ");for(var m in k){d.push(m,"=calls.",m,",")}d.push("self={'_debug':",b);for(var m in n){d.push(",'",m,"': ");e=0;c(n[m]);if(i.length){throw new Error("Template parser: Macros: {{"+i.join("}}, {{")+"}} not closed.")}}d.push("};return self;");var l=d.join("").replace(g.zero,"");d=i=null;return new Function("calls",l)(k)}function c(p){d.push("function(obj, funs, stk){var A=[],S=stk||[];funs||(funs=self);S.push(obj);");while(p){var m=p.indexOf("{{");if(m==-1){a(p);break}if(m>0){a(p.substring(0,m))}p=p.substring(m+2);m=p.indexOf("}}");var l=p.substring(1,m).trim();switch(p.charAt(0)){case"{":if(l==="."){f("S[S.length-1]")}else{if(l.charAt(0)=="."||l.charAt(0)=="["){f("Q(S)"+l)}else{f("Q(S,'"+l+"')")}}m++;break;case"#":var o=p.indexOf("{{",m+2);if(p.substring(o+2,p.indexOf("}}",o+2))=="/"+l){i.push("^"+l);d.push("if(Q(S,'",l,"')){")}else{i.push("#"+l);e++;d.push("var $",e,"=Q(S,'",l,"');if($",e,"){$",e,"=mkArr($",e,");for(var n",e,"=0,L",e,"=$",e,".length;n",e,"<L",e,";n",e,"++){S.push($",e,"[n",e,"]);")}break;case"^":if(!l){var n=i.pop();if(n.charAt(0)=="#"){d.push("S.pop();}");e--}else{if(n.charAt(0)=="^"){}else{throw new Error("Template parser: Else macro mismatch.")}}i.push("^"+n.substr(1));d.push("}else{")}else{i.push("^"+l);d.push("if(!Q(S,'",l,"')){")}break;case"/":var n=i.pop();if(n==="#"+l){d.push("S.pop();}}");e--}else{if(n==="^"+l){d.push("}")}else{throw new Error("Template parser: Endif macro {{/"+l+"}} Mismatch."+(n?" Expected {{/"+n.substr(1)+"}}":""))}}break;case">":case"+":f("funs['"+l+"'](Q(S,'"+l+"'),funs,S)");break;case"$":if(!b){break}d.push("console.log('S:', S);");break;case"@":var n=i[i.length-1];if(n.substr(0,1)==="#"){f("n"+e)}break;default:l=p.substring(0,m);if(l==="."){f("filter(S[S.length-1])")}else{if(l.charAt(0)=="."||l.charAt(0)=="["){f("filter(Q(S)"+l+")")}else{f("filter(Q(S,'"+l+"'))")}}break}p=p.substring(m+2)}d.push("S.pop();if(!stk&&S.length)console.log('Uncleared scope',S);return A.join('');}")}function a(l){f("'"+l.replace(g.quots,"\\'")+"'")}function f(m){var l=d[d.length-1];if(l.charAt(l.length-1)=="\0"){d[d.length-1]=l.substr(0,l.length-3);d.push(",")}else{d.push("A.push(")}d.push(m,");\0")}h.to_html=function(m,l){return h({self:m}).self(l)};return h}());